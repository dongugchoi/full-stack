JSX
자바스크립트에 HTML 같이 쓸 수 있는 문법
props -> 값을 컴포넌트에 전달할 때 쓰는 개념,


const Container = styled.SafeAreaView`
    flex : 1;
    background-color: ${({ theme }) => theme.background};
    align-items : center;
    justify-content: flex-start;
`

Container라는 컴포넌트를 SafeAreaView형태로
SafeAreaView = iOS와 Android에서 화면의 안전한 영역을 감안하여 
레이아웃을 잡아주는 역할

ThemeProvider**는 styled-components 라이브러리에서 제공하는 컴포넌트로, 
앱의 스타일 테마를 쉽게 관리하고 적용할 수 있게 해주는 도구

현재 ThemeProvider theme={theme}가 설정되있기때문에 
하위 컴포넌트가 이 테마객체에 접근할 수 있게된다.

import { Dimensions} from 'react-native'
ㄴ 현재 디바이스의 화면크기를 알 수 있고 레이아웃이나 스타일을 동적으로 조절가능

const width = Dimensions.get('window').width;
ㄴ Dimensions.get('window') = 화면크기를 가져온다.
ㄴ width는 화면의 너비를 의미하고 이 값을 변수 width에 저장

 return <StyledInput width={width} />;
ㄴ width는 props의 이름을 지정하고 ={width}는 위에서 화면의 너비를 의미한 변수를
props로 전달함

Dimensisons 와 useWindowDimensisons 차이

Dimensisons는 초기화면크기를 가져오고 그 이후 화면이 변경되더라도
자동 업데이트 되지 않아 수동으로 이벤트 리스너를 추가해 변경을 감지해야한다.

useWindowDimensisons은 화면 크기가 변경될 때마다 자동으로 업데이트 된 값을 제공한다.

styled.TextInput.attrs(({ theme}) =>({
    placeholderTextColor : theme.main,
}))`
ㄴ TextInput은 리액트네이티브에서 사용되는 텍스트 입력 필드 컴포넌트
ㄴ attrs() 기본속성을 설정하기 위한 메서드, 컴포넌트가 가질 기본 props값의 설정을  도와줌
ㄴ ({ theme }) => ({}) theme형태로 테마를 참조하여 속성을 동적으로 설정
ㄴ theme은 ThemeProvider로부터 전달된 테마객체
ㄴ placeholderTextColor은 TextInput입력란의 placeholder 텍스트 색상을 지정
ㄴ theme.main 은 테마객체에서 main이라는 색을 가져와 placeholder 텍스트 색상으로 설정


autoCapitalize="none"
ㄴ 자동 대문자화 설정 / 첫글자 대문자 자동변환설정기능 / none은 자동대문자화안함
autoCorrect={false}
ㄴ 자동교정기능 / 자동으로 오타를 교정할지 여부 true는 자동 false는 비활성
returnKeyType="done"
ㄴ 입력창에서 키보드의 리턴버튼(enter) 모양과 동작 설정
done = 완료버튼으로 표시된다. 실제동작을 정의하지는않음

keyboardAppearance = "dark"  
ㄴios에서 키보드를 다크모드으로 바꿈

 onChangeText={_handleTextChang}
ㄴ 사용자가 입력필드에 텍스트를 입력할때바다 호출되는 콜백함수
ㄴ 사용자 입력이 변할때마다 해당함수가 실행된다
ㄴ 입력값을 상태(state)에 저장한다.

 onSubmitEditing={_addTask}
ㄴ키보드의 Return key(Enter)을 눌러 입력을 완료했을 때 호출되는 콜백함수
ㄴ 완료버튼을 눌렀을 때 어떤 동작을 수행할지 지정


Input.PropTypes
ㄴPropTypes =  컴포넌트가 받을 props의 타입을 정의
ㄴ Input = 컴포넌트가 어떤 props를 받을지, 그 타입과 필수여부 명시

placeholder: PropTypes.string
ㄴ 문자열타입의 prop을 받는다. 선택적 제공가능

value: PropTypes.string.isRequired:
ㄴ value는 문자열 타입 필수제공 isRequired(필수)

onChangeText: PropTypes.func.isRequired,
ㄴ onChangeText는 함수타입이며 필수

onSubmitEditing : PropTypes.func.isRequired,
ㄴonSubmitEdting은 함수타입이며 필수






